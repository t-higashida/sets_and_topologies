%!PS-Adobe-2.0
%%Creator: dvipsk 5.66a p1.3 Copyright 1996-97 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.66a Copyright 1986-97 Radical Eye Software (www.radicaleye.com)
%%Title: maketfm.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Ryumin-Light-H
%%EndComments
%DVIPSCommandLine: dvipsk maketfm.dvi -o maketfm.ps
%DVIPSParameters: dpi=300, compressed
%DVIPSSource:  TeX output 2004.12.10:2250
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /dir 0 def /dyy{/dir 0 def
}B /dyt{/dir 1 def}B /dty{/dir 2 def}B /dtt{/dir 3 def}B /p{dir 1 eq{90
rotate show -90 rotate}{dir 2 eq{-90 rotate show 90 rotate}{show}ifelse}
ifelse}B /RM{dir 1 eq{S rmoveto}{dir 3 eq{S rmoveto}{rmoveto}ifelse}
ifelse}B /RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N
/v{/ruley X /rulex X V}B /V{}B /RV statusdict begin /product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{
dup length product exch 0 exch getinterval eq{pop true exit}if}{pop}
ifelse}forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex
ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex
ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
newpath transform round exch round exch itransform moveto rulex 0
rlineto 0 ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{
moveto}B /delta 0 N /tail{dup /delta X 0 RM}B /M{S p delta add tail}B /b
{S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i
{2 M}B /j{3 M}B /k{4 M}B /w{0 RM}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B
/o{p -1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S RM}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont cvx]cvx def}def /ObliqueSlant
{dup sin S cos div neg}B /SlantFont{4 index mul add}def /ExtendFont{3 -1
roll mul exch}def /ReEncodeFont{/Encoding exch def}def end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (maketfm.dvi)
@start
%DVIPSBitmapFont: Fa cmr10 10 1
/Fa 1 50 df<5A1207123F12C71207B3A5EAFFF80D1C7C9B15> 49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb msbm8 8 1
/Fb 1 64 df<EA0FE0EA3038EA401CEAE00E12F0A3EA000C131C1330136013C013801201
1300A6C7FCA51203EA0780A2EA03000F1D7E9C14> 63 D E
%EndDVIPSBitmapFont
/Fc 256[{ } 0 39.9426 /Ryumin-Light-H rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop Fc 297 269 a<4961>p 337 269 a<444c>p 376 269
a<244e>p 415 269 a<2535>p 456 269 a<2524>p 495 269 a<253a>p Fb
297 331 a(?) p Fa 926 2819 a(1) p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
